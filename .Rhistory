source("C:/Users/lukev/pitch-clustering/Project.R", echo=TRUE)
insall.packages("mclust")
install.packages("mclust")
source("C:/Users/lukev/pitch-clustering/Project.R", echo=TRUE)
source("C:/Users/lukev/pitch-clustering/Project.R", echo=TRUE)
View(cluster_names)
View(model)
heatmap(apply(t(model$paramters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
typeof(model$paramters$mean)
model$paramters$mean
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(10, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 1), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1)
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
mclustBIC(features_df)
mclustICL(features_df)
plot(Mclust(features_df, G = 5, modelNames = "VEV"), what = "classification")
Class <- pitcher_df$pitch_type
clp <- clPairs(features_df, Class, lower.panel = NULL)
clPairsLegend(0.1, 0.55, class = clp$class, col = clp$col, pch = clp$pch)
table(Class)
View(features_df)
model <- Mclust(features_df, G = 5, modelNames = "VEV")
summary(model)
adjustedRandIndex(Class, model$classification)
# plot(model, what = "classification")
grid.arrange(as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification")) +
labs(title = "   Gerrit Cole 2023 Pitch Clusters"),
as.ggplot(function() plot(model, dimen = c(3, 4),
what = "classification")), nrow = 2)
clustered_df <- cbind(features_df, Class, model$classification) %>%
`colnames<-`(c(colnames(features_df), "pitch_id", "cluster"))
pitcher_df$cluster <- model$classification
cluster_names <- clustered_df %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
plot(mclustICL(features_df))
plot(mclustICL(features_df), cex = 0.1)
plot(mclustICL(features_df), legend = FALSE)
par("mar")
icl <- mclustICL(features_df)
plot(icl, cex.names = 0.1
plot(icl, cex.names = 0.1)
par(mar = c(1, 1, 1, 1))
plot(icl, cex.names = 0.1)
plot(icl, cex.names = 0.5)
plot(icl, cex.names = 1)
plot(icl)
par("mar")
par(mar = c(8, 0, 0 , 2))
plot(icl)
par("mar")
plot(icl)
dev.off()
plot(icl)
plot(icl, cex = 0.5)
plot(icl, cex = 0.1)
plot(icl, cex.main = 0.1)
plot(icl, legendArgs = list(x = "bottomleft", cex.names = 0.1))
plot(icl, ylim = range(model$icl[, -c(1, 2)], na.rm = TRUE),legendArgs = list(x = "bottomleft", cex.names = 0.1))
model$BIC
model$ICL
model$icl
plot(model, what = "ICL", ylim = range(model$icl[, -c(1, 2)], na.rm = TRUE),legendArgs = list(x = "bottomleft", cex.names = 0.1))
range(model$icl[, -c(1, 2)], na.rm = TRUE)
range(model$BIC[, -c(1, 2)], na.rm = TRUE)
plot(icl, ylim = range(model$icl[, -c(1:22)], na.rm = TRUE),legendArgs = list(x = "bottomleft", cex.names = 0.1))
plot(icl, ylim = range(model$icl[, -c(1:2)], na.rm = TRUE),legendArgs = list(x = "bottomleft", cex.names = 0.1))
range(model$icl[, -c(1:2)], na.rm = TRUE)
range(model$BIC[, -c(1:2)], na.rm = TRUE)
range(model$BIC[, -(1:2)], na.rm = TRUE)
range(model$ICL[, -(1:2)], na.rm = TRUE)
plot(icl, ylim = range(model$icl[, -(1:2)], na.rm = TRUE),legendArgs = list(x = "bottomleft", cex.names = 0.1))
plot(icl, ylim = range(model$icl[, -(1:2)], na.rm = TRUE),legendArgs = list(x = "bottomleft")
plot(icl, ylim = range(model$icl[, -(1:2)], na.rm = TRUE),legendArgs = list(x = "bottomleft"))
plot(model, what = "ICL", ylim = range(model$icl[, -(1:2)], na.rm = TRUE),legendArgs = list(x = "bottomleft", cex.names = 0.1))
plot(model, what = "BIC", ylim = range(model$icl[, -(1:2)], na.rm = TRUE),legendArgs = list(x = "bottomleft", cex.names = 0.1))
plot(model, what = "BIC", ylim = range(model$BIC[, -(1:2)], na.rm = TRUE),legendArgs = list(x = "bottomleft", cex.names = 0.1))
plot(icl, legendArgs = list(x = "bottomleft", cex.names = 0.1))
icl
icl[, -(1:2)]
plot(icl[, -(1:2)], legendArgs = list(x = "bottomleft", cex.names = 0.1))
plot(icl[, -(1:2)], legendArgs = list(x = "bottomleft"))
warnings()
plot(icl[, -(1:2)])
plot(icl, legendArgs = list(x = "bottomleft", cex.names = 0.1))
typeof(icl[, -(1:2)])
as.matrix(icl[, -(1:2)])
plot(as.matrix(icl[, -(1:2)]))
plot(as.data.frame(icl[, -(1:2)]))
View(as.data.frame(icl[, -(1:2)]))
plot(icl, legendArgs = list(x = "bottomleft", cex.names = 0.1))
n <- colnames(as.data.frame(icl[, -(1:2)]))
n
icl <- mclustICL(features_df, modelNames = n)
plot(icl, legendArgs = list(x = "bottomleft", cex.names = 0.1))
icl <- mclustICL(features_df, G = 3:9, modelNames = n)
plot(icl, legendArgs = list(x = "bottomleft", cex.names = 0.1))
icl <- mclustICL(features_df, G = 4:9, modelNames = n)
plot(icl, legendArgs = list(x = "bottomleft", cex.names = 0.1))
set.seed(333)
model <- Mclust(features_df, modelNames = "VVV")
summary(model)
adjustedRandIndex(Class, model$classification)
# plot(model, what = "classification")
grid.arrange(as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification")) +
labs(title = "   Gerrit Cole 2023 Pitch Clusters"),
as.ggplot(function() plot(model, dimen = c(3, 4),
what = "classification")), nrow = 2)
clustered_df <- cbind(features_df, Class, model$classification) %>%
`colnames<-`(c(colnames(features_df), "pitch_id", "cluster"))
pitcher_df$cluster <- model$classification
cluster_names <- clustered_df %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
heatmap(apply(t(model$parameters$mean), 2,
function(x) ((x - min(x)) / (max(x) - min(x)))), Rowv = NA,
scale = "none", margins = c(8, 2), labRow = paste("Cluster", 1:model$G),
cexRow = 1.2)
grid.arrange(as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification")) +
labs(title = "   Gerrit Cole 2023 Pitch Clusters"),
as.ggplot(function() plot(Mclust(features_df, G = 5, modelNames = "VEV"), dimen = c(2, 1),
what = "classification")), nrow = 2)
plot(Mclust(features_df, G = 5, modelNames = "VEV"), dimen = c(2, 1),
+                                        what = "classification")
plot(Mclust(features_df, G = 5, modelNames = "VEV"), dimen = c(2, 1),                                     what = "classification")
plot(Mclust(features_df, G = 5, modelNames = "VEV"), dimen = c(2, 1),                                     what = "classification")
grid.arrange(as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification")) +
labs(title = "   Gerrit Cole 2023 Pitch Clusters"),
as.ggplot(function() plot(model, dimen = c(3, 4),
what = "classification")), nrow = 2)
grid.arrange(as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification")) +
labs(title = "   Gerrit Cole 2023 Pitch Clusters"),
as.ggplot(function() plot(Mclust(features_df, G = 5, modelNames = "VEV"), dimen = c(2, 1),
what = "classification")), nrow = 2)
mclustBootstratLRT(features_df, modelName = "VVV")
mclustBootstrapLRT(features_df, modelName = "VVV")
pchisq(q = 8820.18724, df = 1)
pchisq(q = 8820.18724, df = 1, lower.tail=F)
pchisq(q = 30.54093, df = 1, lower.tail=F)
options(scipen = 10)
pchisq(q = 30.54093, df = 1, lower.tail=F)
pchisq(q = 3.54093, df = 1, lower.tail=F)
pchisq(q = 30.54093, df = 1, lower.tail=F) * 999
pchisq(q = 30.54093, df = 1, lower.tail=F) * 999 * 999
pchisq(q = 30.54093, df = 1, lower.tail=F) * 999 * 998
pchisq(q = 30.54093, df = 1, lower.tail=F) * 999 * 995
pchisq(q = 30.54093, df = 1, lower.tail=F) * 998 * 998
pchisq(q = 30.54093, df = 1, lower.tail=F) * 998 * 997
pchisq(q = 30.54093, df = 1, lower.tail=F) * 998 * 996
pchisq(q = 30.54093, df = 1, lower.tail=F) * 996 * 996
pchisq(q = 30.54093, df = 1, lower.tail=F) * 996 * 997
View(clustered_df)
View(pitcher_df)
View(clustered_df)
View(stats_df)
c("Pitcher", 543037, 2023, "pitch", "clusters")
c("Pitcher", 543037, 2023, "pitch", "clusters", rep("", ncol(clustered_df) - 5))
c("Pitcher", 543037, 2023, "pitch", "clusters", rep("", ncol(clustered_df) - 6))
c("Pitcher", 543037, 2023, "pitch", "clusters", rep("", ncol(clustered_df) - 7))
c("Pitcher", 543037, 2023, "pitch", "clusters", rep("", ncol(clustered_df) - 6))
c("Pitcher", 543037, 2023, "pitch", "clusters", rep("", ncol(clustered_df) - 5))
rbind(c("Pitcher", 543037, 2023, "pitch", "clusters", rep("", ncol(clustered_df) - 5)), cluster_names) %>% View()
rbind(c(543037, 2023, "pitch", "clusters", rep("", ncol(clustered_df) - 4)), cluster_names) %>% View()
rbind(c(543037, 2023, "pitches", rep("", ncol(clustered_df) - 3)), cluster_names) %>% View()
rbind(c(543037, 2023, "pitche clusters", rep("", ncol(clustered_df) - 3)), cluster_names) %>% View()
rbind(c(543037, 2023, "pitches", rep("", ncol(clustered_df) - 3)), cluster_names) %>% View()
rbind(c(543037, 2023, "pitches", rep("", ncol(clustered_df) - 3)), cluster_names) %>%
`rownames<-`(c("Pitcher", rownames(cluster_names)))
View()
rbind(c(543037, 2023, "pitches", rep("", ncol(clustered_df) - 3)), cluster_names) %>%
`rownames<-`(c("Pitcher", rownames(cluster_names))) %>%
View()
rbind(cluster_names, c(543037, 2023, "pitches", rep("", ncol(clustered_df) - 3))) %>%
`rownames<-`(c("Pitcher", rownames(cluster_names))) %>%
View()
rbind(cluster_names, c(543037, 2023, "pitches", rep("", ncol(clustered_df) - 3))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
View()
get_cluster_table <- function(pitcher, year) {
cluster_names <- clustered_df %>%
filter(pitcher_id = pitcher, game_year = year) %>%
select(-pitcher_id, -game_year) %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
rbind(cluster_names, c(pitcher, year, "pitches",
rep("", ncol(clustered_df) - 3))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
View()
}
get_cluster_table(543037, 2023)
get_cluster_table <- function(pitcher, year) {
cluster_names <- clustered_df %>%
filter(pitcher_id == pitcher, game_year == year) %>%
select(-pitcher_id, -game_year) %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
rbind(cluster_names, c(pitcher, year, "pitches",
rep("", ncol(clustered_df) - 3))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
View()
}
get_cluster_table(543037, 2023)
clustered_df <- cbind(features_df, Class, model$classification,
pitcher_df$pitcher, pitcher_df$game_year) %>%
`colnames<-`(c(colnames(features_df), "pitch_id", "cluster", "pitcher_id",
"game_year"))
pitcher_df$cluster <- model$classification
rm(n)
rm(icl)
View(clustered_df)
get_cluster_table <- function(pitcher, year) {
cluster_names <- clustered_df %>%
filter(pitcher_id == pitcher, game_year == year) %>%
select(-pitcher_id, -game_year) %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
rbind(cluster_names, c(pitcher, year, "pitches",
rep("", ncol(clustered_df) - 3))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
View()
}
get_cluster_table(543037, 2023)
View(suppressWarnings())
View(suppressWarnings
View(suppressWarnings)
get_cluster_table <- function(pitcher, year) {
cluster_names <- clustered_df %>%
filter(pitcher_id == pitcher, game_year == year) %>%
select(-pitcher_id, -game_year) %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
rbind(cluster_names, c(pitcher, year, "pitches",
rep("", ncol(clustered_df) - 3))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings(View())
}
get_cluster_table(543037, 2023)
get_cluster_table <- function(pitcher, year) {
cluster_names <- clustered_df %>%
filter(pitcher_id == pitcher, game_year == year) %>%
select(-pitcher_id, -game_year) %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
rbind(cluster_names, c(pitcher, year, "pitches",
rep("", ncol(clustered_df) - 3))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings() %>%
View()
}
get_cluster_table(543037, 2023)
get_cluster_table <- function(pitcher, year) {
cluster_names <- clustered_df %>%
filter(pitcher_id == pitcher, game_year == year) %>%
select(-pitcher_id, -game_year) %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
if (ncol(cluster_names) >= 3) {
rbind(cluster_names, c(pitcher, year, "pitches",
rep("", ncol(clustered_df) - 3))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings() %>%
View()
} else {
View(cluster_names)
}
}
get_cluster_table(543037, 2023)
get_cluster_table <- function(pitcher, year) {
cluster_names <- clustered_df %>%
filter(pitcher_id == pitcher, game_year == year) %>%
select(-pitcher_id, -game_year) %>%
group_by(pitch_id, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count, values_fill = 0) %>%
select(pitch_id, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_id), 2, which.max))) %>%
as.data.frame() %>%
`rownames<-`(.$pitch_id) %>%
select(-pitch_id, -row_id)
if (ncol(cluster_names) >= 4) {
rbind(cluster_names, c(pitcher, year, "pitch", "clusters",
rep("", ncol(clustered_df) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings() %>%
View()
} else {
View(cluster_names)
}
}
get_cluster_table(543037, 2023)
grid.arrange(as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification")) +
labs(title = "   Gerrit Cole 2023 Pitch Clusters"),
as.ggplot(function() plot(model, dimen = c(3, 4),
what = "classification")), nrow = 2)
# plot(model, what = "classification")
grid.arrange(as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification")) +
labs(title = "   Gerrit Cole 2023 Pitch Clusters"),
as.ggplot(function() plot(model, dimen = c(3, 4),
what = "classification")), nrow = 2)
data.frame(a = model) %>% View()
data.frame(a = model) %>% View()
data.frame(a = as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification"))) %>% View()
data.frame(a = as.list(as.ggplot(function() plot(model, dimen = c(2, 1),
what = "classification")))) %>% View()
data.frame(a = as.list(model)) %>% View()
as.list(model)
library(RPostgres)
library(tidyverse)
library(ggplotify)
library(gridExtra)
library(mclust)
conn <- dbConnect(Postgres(), dbname = "drpstatcast", host = "localhost",
port = 5432, user = "postgres", password = "drppassword")
stats_query <- "
SELECT *
FROM statcast
WHERE game_date NOT BETWEEN '2021-03-01' AND '2021-03-31'
AND game_date NOT BETWEEN '2015-03-28' AND '2015-04-04'
AND game_date NOT BETWEEN '2016-03-28' AND '2016-04-02'
AND game_date NOT BETWEEN '2017-03-28' AND '2017-04-01'
AND game_date NOT BETWEEN '2022-03-28' AND '2022-04-06'
AND game_date NOT BETWEEN '2023-03-28' AND '2023-03-29'
"
stats_df <- dbGetQuery(conn, stats_query)
pitcher_df <- stats_df %>%
select(pitch_type, game_pk, game_year, game_date, pitcher, release_speed,
release_spin_rate, pfx_x, pfx_z, at_bat_number, pitch_number) %>%
filter(pitcher %in% c(543037, 453286), game_year %in% c(2022, 2023),
!is.na(release_spin_rate), !(pitch_type %in% c("IN", "PO", ""))) %>%
arrange(game_date, game_pk, at_bat_number, pitch_number)
