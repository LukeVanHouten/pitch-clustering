`rownames<-`(c(.$pitch_type[1:(nrow(.) - 3)], "Outcomes", "Color",
"Shape")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c("R.A. Dickey", year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
get_dickey_clusters <- function(season) {
print(plot_clusters(season))
get_cluster_table(season)
}
get_dickey_clusters(2015)
set.seed(333)
dickey_features <- dickey_df %>%
select(game_year, release_speed, release_spin_rate, pfx_x, pfx_z,
pitch_type) %>%
group_by(game_year) %>%
mutate(rank = rank(release_speed, ties.method = "first", na.last = "keep"),
jittered_rank = rank + rnorm(n(), mean = 0, sd = 1000)) %>%
arrange(game_year, desc(jittered_rank)) %>%
ungroup() %>%
mutate(release_spin_rate = replace(release_spin_rate,
is.na(release_spin_rate),
unlist(low_spin_rates))) %>%
select(-rank, -jittered_rank)
set.seed(333)
cluster_df <- dickey_features %>%
group_by(game_year) %>%
mutate(id = row_number(), model = map2(id, game_year,
~ {if (.x == 1) Mclust(data.frame(release_speed, release_spin_rate,
pfx_x, pfx_z), modelNames = "VVV")
else NA_character_}), cluster = model[[1]]$classification) %>%
select(-id) %>%
ungroup() %>%
cbind(outcomes_df)
set.seed(333)
plot_clusters <- function(year) {
mod <- filter(cluster_df, game_year == year)$model[[1]]
assign("dickey_model", mod, envir = globalenv())
p1 <- as.ggplot(function() plot(mod, dimen = c(2, 1),
what = "classification")) +
labs(title = paste("   R.A. Dickey", year, "Pitch Clusters"))
p2 <- as.ggplot(function() plot(mod, dimen = c(3, 4),
what = "classification"))
p1 / p2
}
set.seed(333)
get_cluster_table <- function(year) {
cluster_names <- cluster_df %>%
filter(game_year == year) %>%
select(pitch_type, cluster) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., c("", "", sapply(1:(ncol(.) - 2), function(x) {
data <- filter(cluster_df, game_year == year, cluster == x)$outcome
round(sum(data) / length(data), 4)})), plot_points[, 1:ncol(.)]) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 3)], "Outcomes", "Color",
"Shape")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c("R.A. Dickey", year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
get_dickey_clusters <- function(season) {
print(plot_clusters(season))
get_cluster_table(season)
}
get_dickey_clusters(2016)
get_dickey_clusters(2017)
get_dickey_clusters(2016)
get_dickey_clusters <- function(season) {
print(plot_clusters(year = season))
get_cluster_table(year = season)
}
get_dickey_clusters(2015)
dickey_df <- stats_df %>%
select(pitch_type, game_pk, game_year, game_date, pitcher, release_speed,
release_spin_rate, pfx_x, pfx_z, at_bat_number, pitch_number,
events, type) %>%
filter(pitcher == 285079, !is.na(release_speed),
!is.na(pfx_x), !is.na(pfx_z), !(pitch_type %in% c("IN", "PO", "")))
source("C:/Users/lukev/pitch-clustering/Project.R", echo=TRUE)
source("C:/Users/lukev/pitch-clustering/Project.R", echo=TRUE)
get_pitcher_clusters(pitcher_mlbid = 571578, season = 2019)
get_pitcher_clusters(pitcher_mlbid = 571945, season = 2022)
get_pitcher_clusters(pitcher_mlbid = 572020, season = 2016)
get_pitcher_clusters(pitcher_mlbid = 572020, season = 2021)
get_pitcher_clusters(pitcher_mlbid = 572070, season = 2021)
get_pitcher_clusters(pitcher_mlbid = 572971, season = 2020)
get_pitcher_clusters(pitcher_mlbid = 573186, season = 2021)
get_pitcher_clusters(pitcher_mlbid = 592314, season = 2015)
get_pitcher_clusters(pitcher_mlbid = 592332, season = 2023)
get_pitcher_clusters(pitcher_mlbid = 592836, season = 2015)
get_pitcher_clusters(pitcher_mlbid = 592866, season = 2023)
get_pitcher_clusters(pitcher_mlbid = 593958, season = 2021)
get_pitcher_clusters(pitcher_mlbid = 594798, season = 2017)
get_pitcher_clusters(pitcher_mlbid = 596057, season = 2019)
get_pitcher_clusters(pitcher_mlbid = 596133, season = 2020)
get_pitcher_clusters(pitcher_mlbid = 605135, season = 2021)
get_pitcher_clusters(pitcher_mlbid = 605135, season = 2023)
get_pitcher_clusters(pitcher_mlbid = 605483, season = 2016)
get_pitcher_clusters(pitcher_mlbid = 605483, season = 2021)
get_pitcher_clusters(pitcher_mlbid = 605540, season = 2020)
get_pitcher_clusters(pitcher_mlbid = 608379, season = 2016)
get_pitcher_clusters(pitcher_mlbid = 608379, season = 2019)
get_pitcher_clusters(pitcher_mlbid = 612672, season = 2016)
get_pitcher_clusters(pitcher_mlbid = 621111, season = 2021)
View(model)
get_pitcher_clusters(pitcher_mlbid = 669302, season = 2023)
get_pitcher_clusters(pitcher_mlbid = 346798, season = 2015)
View(model$parameters$mean)
cbind(model$parameters$mean[2, ], model$parameters$mean[8, ]) %>% View()
cbind(model$parameters$mean[, 2], model$parameters$mean[, 8]) %>% View()
cbind(model$parameters$mean[, 3], model$parameters$mean[, 8]) %>% View()
cbind(model$parameters$mean[, 5], model$parameters$mean[, 9]) %>% View()
source("C:/Users/lukev/pitch-clustering/Project.R", echo=TRUE)
get_pitcher_clusters(pitcher_mlbid = 571578, season = 2019)
get_pitcher_clusters(pitcher_mlbid = 623474, season = 2022)
View(outcomes_df)
outcomes_df <- pitcher_df %>%
select(game_pk, game_year, pitcher, at_bat_number, events, type) %>%
group_by(pitcher, game_year, game_pk, at_bat_number) %>%
mutate(event = as.numeric(
events %in% c("strikeout", "field_out", "grounded_into_double_play",
"double_play", "triple_play", "pickoff_1b", "pickoff_3b",
"caught_stealing_2b", "caught_stealing_home", "other_out",
"strikeout_double_play")), call = as.numeric(type == "S"),
score = event + call, outcome = as.numeric(score >= 1)) %>%
ungroup()
View(outcomes_df)
outcomes_df <- select(outcomes_df, outcome)
View(outcomes_df)
View(cluster_df)
get_pitcher_clusters(pitcher_mlbid = 112526, season = 2015)
View(model)
View(cluster_df)
View(cbind(cluster_df, model$classification))
get_pitcher_clusters(pitcher_mlbid = 571578, season = 2019)
cbind(filter(cluster_df, pitcher == 571578, game_year == 2019), model$classification) %>% View()
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "class")) %>%
filter(class == 1) %>%
View()
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification)
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification) %>% View()
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == 1) %>%
View()
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == 1) %>%
select(outcome) %>%
View()
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == 1) %>%
select(outcome) %>%
sum()
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == 1) %>%
select(outcome) %>%
length()
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == 1) %>%
select(outcome) %>%
nro()
cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == 571578, game_year == 2019) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == 1) %>%
select(outcome) %>%
nrow()
set.seed(333)
get_cluster_table <- function(pitcher_id, year) {
cluster_names <- cluster_df %>%
filter(pitcher == pitcher_id, game_year == year) %>%
select(pitch_type) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitch_type", "cluster")) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., c("", "", sapply(1:(ncol(.) - 2), function(x) {
data <- cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == pitcher_id, game_year == year) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == x) %>%
select(outcome)
round(sum(data) / nrow(data), 4)})), plot_points[, 1:ncol(.)]) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 3)], "Outcomes", "Color",
"Shape")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c(pitcher_id, year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_pitcher_clusters <- function(pitcher_mlbid, season) {
print(plot_clusters(pitcher_id = pitcher_mlbid, year = season))
get_cluster_table(pitcher_id = pitcher_mlbid, year = season)
}
set.seed(333)
get_pitcher_clusters(pitcher_mlbid = 623474, season = 2022)
set.seed(333)
get_cluster_table <- function(pitcher_id, year) {
cluster_names <- cluster_df %>%
filter(pitcher == pitcher_id, game_year == year) %>%
select(pitch_type) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitch_type", "cluster")) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., c("", "", sapply(1:(ncol(.) - 2), function(x) {
data <- cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == pitcher_id, game_year == year) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == x) %>%
select(outcome)
round(sum(data) / nrow(data), 4)})), plot_points[, 1:ncol(.)]) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 3)], "Outcomes", "Color",
"Shape")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c(pitcher_id, year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_pitcher_clusters <- function(pitcher_mlbid, season) {
print(plot_clusters(pitcher_id = pitcher_mlbid, year = season))
get_cluster_table(pitcher_id = pitcher_mlbid, year = season)
}
set.seed(333)
get_pitcher_clusters(pitcher_mlbid = 61111, season = 2021)
set.seed(333)
get_cluster_table <- function(pitcher_id, year) {
cluster_names <- cluster_df %>%
filter(pitcher == pitcher_id, game_year == year) %>%
select(pitch_type) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitch_type", "cluster")) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., c("", "", sapply(1:(ncol(.) - 2), function(x) {
data <- cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == pitcher_id, game_year == year) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == x) %>%
select(outcome)
round(sum(data) / nrow(data), 4)})), plot_points[, 1:ncol(.)]) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 3)], "Outcomes", "Color",
"Shape")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c(pitcher_id, year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_pitcher_clusters <- function(pitcher_mlbid, season) {
print(plot_clusters(pitcher_id = pitcher_mlbid, year = season))
get_cluster_table(pitcher_id = pitcher_mlbid, year = season)
}
set.seed(333)
get_pitcher_clusters(pitcher_mlbid = 621111, season = 2021)
set.seed(333)
get_cluster_table <- function(pitcher_id, year) {
cluster_names <- cluster_df %>%
filter(pitcher == pitcher_id, game_year == year) %>%
select(pitch_type) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitch_type", "cluster")) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., c("", "", sapply(1:(ncol(.) - 2), function(x) {
data <- cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == pitcher_id, game_year == year) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == x) %>%
select(outcome)
round(sum(data) / nrow(data), 4)})), plot_points[, 1:ncol(.)]) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 3)], "Outcomes", "Color",
"Shape")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c(pitcher_id, year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_pitcher_clusters <- function(pitcher_mlbid, season) {
print(plot_clusters(pitcher_id = pitcher_mlbid, year = season))
get_cluster_table(pitcher_id = pitcher_mlbid, year = season)
}
set.seed(333)
get_pitcher_clusters(pitcher_mlbid = 669302, season = 2023)
set.seed(333)
get_cluster_table <- function(pitcher_id, year) {
cluster_names <- cluster_df %>%
filter(pitcher == pitcher_id, game_year == year) %>%
select(pitch_type) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitch_type", "cluster")) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., c("", "", sapply(1:(ncol(.) - 2), function(x) {
data <- cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == pitcher_id, game_year == year) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == x) %>%
select(outcome)
round(sum(data) / nrow(data), 4)})), plot_points[, 1:ncol(.)]) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 3)], "Outcomes", "Color",
"Shape")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c(pitcher_id, year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_pitcher_clusters <- function(pitcher_mlbid, season) {
print(plot_clusters(pitcher_id = pitcher_mlbid, year = season))
get_cluster_table(pitcher_id = pitcher_mlbid, year = season)
}
set.seed(333)
get_pitcher_clusters(pitcher_mlbid = 572020, season = 2016)
set.seed(333)
get_cluster_table <- function(pitcher_id, year) {
cluster_names <- cluster_df %>%
filter(pitcher == pitcher_id, game_year == year) %>%
select(pitch_type) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitch_type", "cluster")) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., c("", "", sapply(1:(ncol(.) - 2), function(x) {
data <- cluster_df %>%
select(pitcher, game_year, outcome) %>%
filter(pitcher == pitcher_id, game_year == year) %>%
cbind(., model$classification) %>%
`colnames<-`(c("pitcher", "game_year", "outcome", "class")) %>%
filter(class == x) %>%
select(outcome)
round(sum(data) / nrow(data), 4)})), plot_points[, 1:ncol(.)]) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 3)], "Outcomes", "Color",
"Shape")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c(pitcher_id, year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_pitcher_clusters <- function(pitcher_mlbid, season) {
print(plot_clusters(pitcher_id = pitcher_mlbid, year = season))
get_cluster_table(pitcher_id = pitcher_mlbid, year = season)
}
set.seed(333)
get_pitcher_clusters(pitcher_mlbid = 572020, season = 2021)
get_pitcher_clusters(pitcher_mlbid = 346798, season = 2015)
get_pitcher_clusters(pitcher_mlbid = 624133, season = 2022)
get_pitcher_clusters(pitcher_mlbid = 628317, season = 2020)
get_pitcher_clusters(pitcher_mlbid = 641540, season = 2021)
get_pitcher_clusters(pitcher_mlbid = 641540, season = 20210)
source("C:/Users/lukev/pitch-clustering/Dickey.R", echo=TRUE)
get_dickey_clusters(201522)
