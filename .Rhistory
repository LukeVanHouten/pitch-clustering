p2 <- as.ggplot(function() plot(mod, dimen = c(3, 4),
what = "classification"))
p1 / p2
}
set.seed(333)
get_cluster_table <- function(year) {
cluster_names <- cluster_df %>%
filter(game_year == year) %>%
select(pitch_type, cluster) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., plot_points[, 1:ncol(.)],
cbind(rep("", 7), rep("", 7),
sapply(1:(ncol(.) - 2), function(x) {
cluster_df %>%
select(game_year, outcome, strike_percentage, k_percentage,
hr_percentage, pitch_ba, first_pitch, two_strikes,
cluster) %>%
filter(game_year == year, cluster == x) %>%
select(-game_year, -cluster) %>%
summarize(outcome = round(sum(outcome) / nrow(.), 4),
strike_percentage = round(sum(strike_percentage) /
nrow(.), 4),
k_percentage = round(sum(k_percentage) / nrow(.), 4),
hr_percentage = round(sum(hr_percentage) / nrow(.),
4),
pitch_ba = round(sum(pitch_ba) / nrow(.), 4),
first_pitch = round(sum(first_pitch) / nrow(.), 4),
two_strikes = round(sum(two_strikes) / nrow(.),
4)) %>%
t()}) %>% as.data.frame()) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2))),
cbind(rep("", 4), rep("", 4), dickey_model$parameters$mean %>%
as.data.frame() %>%
mutate_all(round, 4)) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2)))) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 13)], "Color", "Shape",
"Outcomes", "Strike%", "K%", "HR%", "Pitch BA",
"1st Pitch", "2 Strikes", "Mean Velocity",
"Mean Spin Rate", "Mean X-Break", "Mean Z-Break")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c("R.A. Dickey", year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_dickey_clusters <- function(season) {
print(plot_clusters(year = season))
get_cluster_table(year = season)
}
set.seed(333)
get_dickey_clusters(2015)
set.seed(333)
dickey_features <- dickey_df %>%
select(game_year, release_speed, release_spin_rate, pfx_x, pfx_z,
pitch_type) %>%
group_by(game_year) %>%
mutate(rank = rank(release_speed, ties.method = "first", na.last = "keep"),
jittered_rank = rank + rnorm(n(), mean = 0, sd = 1000)) %>%
arrange(game_year, desc(jittered_rank)) %>%
ungroup() %>%
mutate(release_spin_rate = replace(release_spin_rate,
is.na(release_spin_rate),
unlist(low_spin_rates))) %>%
select(-rank, -jittered_rank)
set.seed(333)
cluster_df <- dickey_features %>%
group_by(game_year) %>%
mutate(id = row_number(), model = map2(id, game_year,
~ {if (.x == 1) Mclust(data.frame(release_speed, release_spin_rate,
pfx_x, pfx_z), modelNames = "VVV")
else NA_character_}), cluster = model[[1]]$classification) %>%
select(-id) %>%
ungroup() %>%
cbind(outcomes_df)
set.seed(333)
plot_clusters <- function(year) {
mod <- filter(cluster_df, game_year == year)$model[[1]]
assign("dickey_model", mod, envir = globalenv())
assign("ari", round(adjustedRandIndex(mod$classification, as.vector(
cluster_df %>%
filter(game_year == year) %>%
select(pitch_type))$pitch_type), 4), envir = globalenv())
p1 <- as.ggplot(function() plot(mod, dimen = c(2, 1),
what = "classification")) +
labs(title = paste("   R.A. Dickey", year, "Pitch Clusters"))
p2 <- as.ggplot(function() plot(mod, dimen = c(3, 4),
what = "classification"))
p1 / p2
}
set.seed(333)
get_cluster_table <- function(year) {
cluster_names <- cluster_df %>%
filter(game_year == year) %>%
select(pitch_type, cluster) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., plot_points[, 1:ncol(.)],
cbind(rep("", 7), rep("", 7),
sapply(1:(ncol(.) - 2), function(x) {
cluster_df %>%
select(game_year, outcome, strike_percentage, k_percentage,
hr_percentage, pitch_ba, first_pitch, two_strikes,
cluster) %>%
filter(game_year == year, cluster == x) %>%
select(-game_year, -cluster) %>%
summarize(outcome = round(sum(outcome) / nrow(.), 4),
strike_percentage = round(sum(strike_percentage) /
nrow(.), 4),
k_percentage = round(sum(k_percentage) / nrow(.), 4),
hr_percentage = round(sum(hr_percentage) / nrow(.),
4),
pitch_ba = round(sum(pitch_ba) / nrow(.), 4),
first_pitch = round(sum(first_pitch) / nrow(.), 4),
two_strikes = round(sum(two_strikes) / nrow(.),
4)) %>%
t()}) %>% as.data.frame()) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2))),
cbind(rep("", 4), rep("", 4), dickey_model$parameters$mean %>%
as.data.frame() %>%
mutate_all(round, 4)) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2)))) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 13)], "Color", "Shape",
"Outcomes", "Strike%", "K%", "HR%", "Pitch BA",
"1st Pitch", "2 Strikes", "Mean Velocity",
"Mean Spin Rate", "Mean X-Break", "Mean Z-Break")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c("R.A. Dickey", year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_dickey_clusters <- function(season) {
print(plot_clusters(year = season))
get_cluster_table(year = season)
}
set.seed(333)
get_dickey_clusters(2015)
dickey_features <- dickey_df %>%
select(game_year, release_speed, release_spin_rate, pfx_x, pfx_z,
pitch_type) %>%
group_by(game_year) %>%
mutate(rank = rank(release_speed, ties.method = "first", na.last = "keep"),
jittered_rank = rank + rnorm(n(), mean = 0, sd = 750)) %>%
arrange(game_year, desc(jittered_rank)) %>%
ungroup() %>%
mutate(release_spin_rate = replace(release_spin_rate,
is.na(release_spin_rate),
unlist(low_spin_rates))) %>%
select(-rank, -jittered_rank)
set.seed(333)
cluster_df <- dickey_features %>%
group_by(game_year) %>%
mutate(id = row_number(), model = map2(id, game_year,
~ {if (.x == 1) Mclust(data.frame(release_speed, release_spin_rate,
pfx_x, pfx_z), modelNames = "VVV")
else NA_character_}), cluster = model[[1]]$classification) %>%
select(-id) %>%
ungroup() %>%
cbind(outcomes_df)
set.seed(333)
plot_clusters <- function(year) {
mod <- filter(cluster_df, game_year == year)$model[[1]]
assign("dickey_model", mod, envir = globalenv())
assign("ari", round(adjustedRandIndex(mod$classification, as.vector(
cluster_df %>%
filter(game_year == year) %>%
select(pitch_type))$pitch_type), 4), envir = globalenv())
p1 <- as.ggplot(function() plot(mod, dimen = c(2, 1),
what = "classification")) +
labs(title = paste("   R.A. Dickey", year, "Pitch Clusters"))
p2 <- as.ggplot(function() plot(mod, dimen = c(3, 4),
what = "classification"))
p1 / p2
}
set.seed(333)
get_cluster_table <- function(year) {
cluster_names <- cluster_df %>%
filter(game_year == year) %>%
select(pitch_type, cluster) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., plot_points[, 1:ncol(.)],
cbind(rep("", 7), rep("", 7),
sapply(1:(ncol(.) - 2), function(x) {
cluster_df %>%
select(game_year, outcome, strike_percentage, k_percentage,
hr_percentage, pitch_ba, first_pitch, two_strikes,
cluster) %>%
filter(game_year == year, cluster == x) %>%
select(-game_year, -cluster) %>%
summarize(outcome = round(sum(outcome) / nrow(.), 4),
strike_percentage = round(sum(strike_percentage) /
nrow(.), 4),
k_percentage = round(sum(k_percentage) / nrow(.), 4),
hr_percentage = round(sum(hr_percentage) / nrow(.),
4),
pitch_ba = round(sum(pitch_ba) / nrow(.), 4),
first_pitch = round(sum(first_pitch) / nrow(.), 4),
two_strikes = round(sum(two_strikes) / nrow(.),
4)) %>%
t()}) %>% as.data.frame()) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2))),
cbind(rep("", 4), rep("", 4), dickey_model$parameters$mean %>%
as.data.frame() %>%
mutate_all(round, 4)) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2)))) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 13)], "Color", "Shape",
"Outcomes", "Strike%", "K%", "HR%", "Pitch BA",
"1st Pitch", "2 Strikes", "Mean Velocity",
"Mean Spin Rate", "Mean X-Break", "Mean Z-Break")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c("R.A. Dickey", year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_dickey_clusters <- function(season) {
print(plot_clusters(year = season))
get_cluster_table(year = season)
}
set.seed(333)
get_dickey_clusters(2015)
set.seed(333)
dickey_features <- dickey_df %>%
select(game_year, release_speed, release_spin_rate, pfx_x, pfx_z,
pitch_type) %>%
group_by(game_year) %>%
mutate(rank = rank(release_speed, ties.method = "first", na.last = "keep"),
jittered_rank = rank + rnorm(n(), mean = 0, sd = 1250)) %>%
arrange(game_year, desc(jittered_rank)) %>%
ungroup() %>%
mutate(release_spin_rate = replace(release_spin_rate,
is.na(release_spin_rate),
unlist(low_spin_rates))) %>%
select(-rank, -jittered_rank)
set.seed(333)
cluster_df <- dickey_features %>%
group_by(game_year) %>%
mutate(id = row_number(), model = map2(id, game_year,
~ {if (.x == 1) Mclust(data.frame(release_speed, release_spin_rate,
pfx_x, pfx_z), modelNames = "VVV")
else NA_character_}), cluster = model[[1]]$classification) %>%
select(-id) %>%
ungroup() %>%
cbind(outcomes_df)
set.seed(333)
plot_clusters <- function(year) {
mod <- filter(cluster_df, game_year == year)$model[[1]]
assign("dickey_model", mod, envir = globalenv())
assign("ari", round(adjustedRandIndex(mod$classification, as.vector(
cluster_df %>%
filter(game_year == year) %>%
select(pitch_type))$pitch_type), 4), envir = globalenv())
p1 <- as.ggplot(function() plot(mod, dimen = c(2, 1),
what = "classification")) +
labs(title = paste("   R.A. Dickey", year, "Pitch Clusters"))
p2 <- as.ggplot(function() plot(mod, dimen = c(3, 4),
what = "classification"))
p1 / p2
}
set.seed(333)
get_cluster_table <- function(year) {
cluster_names <- cluster_df %>%
filter(game_year == year) %>%
select(pitch_type, cluster) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., plot_points[, 1:ncol(.)],
cbind(rep("", 7), rep("", 7),
sapply(1:(ncol(.) - 2), function(x) {
cluster_df %>%
select(game_year, outcome, strike_percentage, k_percentage,
hr_percentage, pitch_ba, first_pitch, two_strikes,
cluster) %>%
filter(game_year == year, cluster == x) %>%
select(-game_year, -cluster) %>%
summarize(outcome = round(sum(outcome) / nrow(.), 4),
strike_percentage = round(sum(strike_percentage) /
nrow(.), 4),
k_percentage = round(sum(k_percentage) / nrow(.), 4),
hr_percentage = round(sum(hr_percentage) / nrow(.),
4),
pitch_ba = round(sum(pitch_ba) / nrow(.), 4),
first_pitch = round(sum(first_pitch) / nrow(.), 4),
two_strikes = round(sum(two_strikes) / nrow(.),
4)) %>%
t()}) %>% as.data.frame()) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2))),
cbind(rep("", 4), rep("", 4), dickey_model$parameters$mean %>%
as.data.frame() %>%
mutate_all(round, 4)) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2)))) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 13)], "Color", "Shape",
"Outcomes", "Strike%", "K%", "HR%", "Pitch BA",
"1st Pitch", "2 Strikes", "Mean Velocity",
"Mean Spin Rate", "Mean X-Break", "Mean Z-Break")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c("R.A. Dickey", year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_dickey_clusters <- function(season) {
print(plot_clusters(year = season))
get_cluster_table(year = season)
}
set.seed(333)
get_dickey_clusters(2015)
get_dickey_clusters(2016)
get_dickey_clusters(2017)
set.seed(333)
dickey_features <- dickey_df %>%
select(game_year, release_speed, release_spin_rate, pfx_x, pfx_z,
pitch_type) %>%
group_by(game_year) %>%
mutate(rank = rank(release_speed, ties.method = "first", na.last = "keep"),
jittered_rank = rank + rnorm(n(), mean = 0, sd = 1000)) %>%
arrange(game_year, desc(jittered_rank)) %>%
ungroup() %>%
mutate(release_spin_rate = replace(release_spin_rate,
is.na(release_spin_rate),
unlist(low_spin_rates))) %>%
select(-rank, -jittered_rank)
set.seed(333)
cluster_df <- dickey_features %>%
group_by(game_year) %>%
mutate(id = row_number(), model = map2(id, game_year,
~ {if (.x == 1) Mclust(data.frame(release_speed, release_spin_rate,
pfx_x, pfx_z), modelNames = "VVV")
else NA_character_}), cluster = model[[1]]$classification) %>%
select(-id) %>%
ungroup() %>%
cbind(outcomes_df)
set.seed(333)
plot_clusters <- function(year) {
mod <- filter(cluster_df, game_year == year)$model[[1]]
assign("dickey_model", mod, envir = globalenv())
assign("ari", round(adjustedRandIndex(mod$classification, as.vector(
cluster_df %>%
filter(game_year == year) %>%
select(pitch_type))$pitch_type), 4), envir = globalenv())
p1 <- as.ggplot(function() plot(mod, dimen = c(2, 1),
what = "classification")) +
labs(title = paste("   R.A. Dickey", year, "Pitch Clusters"))
p2 <- as.ggplot(function() plot(mod, dimen = c(3, 4),
what = "classification"))
p1 / p2
}
set.seed(333)
get_cluster_table <- function(year) {
cluster_names <- cluster_df %>%
filter(game_year == year) %>%
select(pitch_type, cluster) %>%
group_by(pitch_type, cluster) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = cluster, values_from = count,
values_fill = 0) %>%
select(pitch_type, sort(colnames(.)[2:ncol(.)])) %>%
mutate(row_id = row_number()) %>%
arrange(match(row_id, apply(across(-pitch_type), 2, which.max))) %>%
as.data.frame() %>%
select(pitch_type, row_id, colnames(select(., -pitch_type,
-row_id))) %>%
rbind(., plot_points[, 1:ncol(.)],
cbind(rep("", 7), rep("", 7),
sapply(1:(ncol(.) - 2), function(x) {
cluster_df %>%
select(game_year, outcome, strike_percentage, k_percentage,
hr_percentage, pitch_ba, first_pitch, two_strikes,
cluster) %>%
filter(game_year == year, cluster == x) %>%
select(-game_year, -cluster) %>%
summarize(outcome = round(sum(outcome) / nrow(.), 4),
strike_percentage = round(sum(strike_percentage) /
nrow(.), 4),
k_percentage = round(sum(k_percentage) / nrow(.), 4),
hr_percentage = round(sum(hr_percentage) / nrow(.),
4),
pitch_ba = round(sum(pitch_ba) / nrow(.), 4),
first_pitch = round(sum(first_pitch) / nrow(.), 4),
two_strikes = round(sum(two_strikes) / nrow(.),
4)) %>%
t()}) %>% as.data.frame()) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2))),
cbind(rep("", 4), rep("", 4), dickey_model$parameters$mean %>%
as.data.frame() %>%
mutate_all(round, 4)) %>%
`colnames<-`(c("pitch_type", "row_id", 1:(ncol(.) - 2)))) %>%
`rownames<-`(c(.$pitch_type[1:(nrow(.) - 13)], "Color", "Shape",
"Outcomes", "Strike%", "K%", "HR%", "Pitch BA",
"1st Pitch", "2 Strikes", "Mean Velocity",
"Mean Spin Rate", "Mean X-Break", "Mean Z-Break")) %>%
select(-pitch_type, -row_id)
if (ncol(cluster_names) >= 4) {
cluster_table <- rbind(cluster_names,
c("R.A. Dickey", year, "pitch", "clusters",
rep("", ncol(cluster_names) - 4))) %>%
`rownames<-`(c(rownames(cluster_names), "Pitcher")) %>%
suppressWarnings()
View(cluster_table)
} else {
View(cluster_names)
}
}
set.seed(333)
get_dickey_clusters <- function(season) {
print(plot_clusters(year = season))
get_cluster_table(year = season)
}
set.seed(333)
get_dickey_clusters(2015)
source("C:/Users/lukev/pitch-clustering/Project.R", echo=TRUE)
get_pitcher_clusters(pitcher_mlbid = 346798, season = 2015)
filter(stats_df, pitcher == 346798, game_year == 2015)
filter(stats_df, pitcher == 346798, game_year == 2015) %>% View()
filter(stats_df, pitcher == 346798, game_year == 2015) %>% arrange(release_spin_rate) %>% View()
table(filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate < 1900)$release_spin_rate)
table(filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate < 1900)$home_team)
sort(table(filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate < 1900)$home_team))
sort(table(filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate < 1900)$home_team), decreasing = TRUE)
sort(table(filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate > 1900)$home_team), decreasing = TRUE)
a <- filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate < 1900)$home_team
b <- filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate > 1900)$home_team
sort(table(a / nrow(a)), decreasing = TRUE)
sort(table(a / kength(a)), decreasing = TRUE)
sort(table(a / length(a)), decreasing = TRUE)
typeof(a)
a
sort(table(a)  / length(a)), decreasing = TRUE)
sort(table(a) / length(a), decreasing = TRUE)
sort(round(table(a) / length(a), 4), decreasing = TRUE)
sort(round(table(b) / length(b), 4), decreasing = TRUE)
round(table(a) / length(a), 4)
round(table(b) / length(b), 4)
a <- filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate < 1900, pitch_type != "CH")$home_team
b <- filter(stats_df, pitcher == 346798, game_year == 2015, release_spin_rate > 1900, pitch_type != "CH")$home_team
round(table(a) / length(a), 4)
sort(round(table(a) / length(a), 4), decreasing = TRUE)
sort(round(table(b) / length(b), 4), decreasing = TRUE)
sort(table(a), decreasing = TRUE)
sort(table(b), decreasing = TRUE)
(692 + 286) / (320 + 1583)
12/22
16 / 37
a <- filter(stats_df, pitcher == 444468, game_year == 2015, release_spin_rate < 1900, pitch_type != "CH")$home_team
b <- filter(stats_df, pitcher == 444468, game_year == 2015, release_spin_rate > 1900, pitch_type != "CH")$home_team
sort(table(a), decreasing = TRUE)
sort(table(b), decreasing = TRUE)
sort(round(table(a) / length(a), 4), decreasing = TRUE)
sort(round(table(b) / length(b), 4), decreasing = TRUE)
get_pitcher_clusters(pitcher_mlbid = 477132, season = 2015)
